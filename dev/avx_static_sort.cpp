/* 
        |           |   _)                               |   
   __|  __|   _` |  __|  |   __|       __|   _ \    __|  __|
 \__ \  |    (   |  |    |  (        \__ \  (   |  |     |   
 ____/ \__| \__,_| \__| _| \___|     ____/ \___/  _|    \__|   
                   Copyright (c) 2018 M. Welsch <michael@welsch.one>
       Copyright (c) 2018 S. D. Adams <s.d.adams.software@gmail.com> 
*/

#ifndef SORTING_NETWORK_HPP
#define SORTING_NETWORK_HPP

// This file is automatically generated by dev/avx_static_sort_generator.cpp.  Do not edit manually, changes will be lost.

#ifndef SIMD_SORT_H_GUARD
#include "avx2_cas.cpp"

#endif
namespace vector_sort
{
    template <typename T> void sort(T *data, size_t n);

    namespace internal
    {
        template <size_t const n> class net {public: template <typename T> static void sort(T *);};

        template <typename T> 
        inline void static_sort(T * const data, size_t const n); 
    }
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<2>::sort(T * const data)
{
    avx2_cas::cas<T, 0, 1>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<3>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas<T, 0, 1>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<4>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas<T, 1, 2>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<5>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 3, 4>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
    avx2_cas::cas<T, 0, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 4>(data);
    avx2_cas::cas<T, 1, 3>(data);
    avx2_cas::cas<T, 1, 2>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<6>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas2<T>::template cas<0, 1, 4, 5>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 4, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 1, 3>(data);
    avx2_cas::cas<T, 2, 3>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<7>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas3<T>::template cas<0, 1, 3, 4, 5, 6>(data);
    avx2_cas::cas2<T>::template cas<3, 5, 4, 6>(data);
    avx2_cas::cas<T, 4, 5>(data);
    avx2_cas::cas<T, 0, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 5, 2, 6>(data);
    avx2_cas::cas2<T>::template cas<2, 5, 1, 3>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<8>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 4, 5, 6, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 0, 4>(data);
    avx2_cas::cas<T, 1, 5>(data);
    avx2_cas::cas3<T>::template cas<1, 4, 2, 6, 3, 7>(data);
    avx2_cas::cas2<T>::template cas<3, 6, 2, 4>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<9>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 4, 5, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas<T, 6, 7>(data);
    avx2_cas::cas<T, 4, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 5, 8>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas<T, 5, 6>(data);
    avx2_cas::cas<T, 0, 5>(data);
    avx2_cas::cas2<T>::template cas<0, 4, 1, 6>(data);
    avx2_cas::cas<T, 1, 5>(data);
    avx2_cas::cas3<T>::template cas<1, 4, 2, 7, 3, 8>(data);
    avx2_cas::cas2<T>::template cas<3, 7, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 3, 6>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<10>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 3, 4>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
    avx2_cas::cas<T, 0, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 4>(data);
    avx2_cas::cas<T, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 5, 6, 8, 9>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas<T, 7, 8>(data);
    avx2_cas::cas<T, 5, 8>(data);
    avx2_cas::cas2<T>::template cas<5, 7, 6, 9>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 0, 5>(data);
    avx2_cas::cas<T, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<1, 5, 2, 7, 3, 8, 4, 9>(data);
    avx2_cas::cas2<T>::template cas<4, 8, 3, 7>(data);
    avx2_cas::cas3<T>::template cas<4, 7, 2, 5, 3, 6>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 3, 5>(data);
    avx2_cas::cas<T, 4, 5>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<11>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 3, 4>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
    avx2_cas::cas<T, 0, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 4>(data);
    avx2_cas::cas<T, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<1, 2, 6, 7>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 9, 10>(data);
    avx2_cas::cas<T, 8, 10>(data);
    avx2_cas::cas<T, 8, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 8, 6, 9, 7, 10>(data);
    avx2_cas::cas2<T>::template cas<7, 9, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<7, 8, 0, 6>(data);
    avx2_cas::cas2<T>::template cas<0, 5, 1, 7>(data);
    avx2_cas::cas<T, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<1, 5, 2, 8, 3, 9, 4, 10>(data);
    avx2_cas::cas2<T>::template cas<4, 9, 3, 8>(data);
    avx2_cas::cas3<T>::template cas<4, 8, 2, 5, 3, 6>(data);
    avx2_cas::cas<T, 4, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 3, 5>(data);
    avx2_cas::cas<T, 4, 5>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<12>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas2<T>::template cas<0, 1, 4, 5>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 4, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 10, 11>(data);
    avx2_cas::cas<T, 9, 11>(data);
    avx2_cas::cas<T, 9, 10>(data);
    avx2_cas::cas3<T>::template cas<6, 9, 7, 10, 8, 11>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 7, 9>(data);
    avx2_cas::cas3<T>::template cas<8, 9, 0, 6, 1, 7>(data);
    avx2_cas::cas<T, 2, 8>(data);
    avx2_cas::cas2<T>::template cas<2, 7, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<2, 6, 3, 9, 4, 10, 5, 11>(data);
    avx2_cas::cas2<T>::template cas<5, 10, 4, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 9, 3, 6, 4, 7>(data);
    avx2_cas::cas<T, 5, 8>(data);
    avx2_cas::cas2<T>::template cas<5, 7, 4, 6>(data);
    avx2_cas::cas<T, 5, 6>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<13>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas2<T>::template cas<0, 1, 4, 5>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 4, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas3<T>::template cas<6, 7, 9, 10, 11, 12>(data);
    avx2_cas::cas2<T>::template cas<9, 11, 10, 12>(data);
    avx2_cas::cas<T, 10, 11>(data);
    avx2_cas::cas<T, 6, 10>(data);
    avx2_cas::cas3<T>::template cas<6, 9, 7, 11, 8, 12>(data);
    avx2_cas::cas2<T>::template cas<8, 11, 7, 9>(data);
    avx2_cas::cas<T, 8, 10>(data);
    avx2_cas::cas2<T>::template cas<8, 9, 0, 7>(data);
    avx2_cas::cas3<T>::template cas<0, 6, 1, 8, 2, 9>(data);
    avx2_cas::cas2<T>::template cas<2, 8, 1, 6>(data);
    avx2_cas::cas<T, 2, 7>(data);
    avx2_cas::cas4<T>::template cas<2, 6, 3, 10, 4, 11, 5, 12>(data);
    avx2_cas::cas2<T>::template cas<5, 11, 4, 10>(data);
    avx2_cas::cas2<T>::template cas<5, 10, 3, 7>(data);
    avx2_cas::cas3<T>::template cas<3, 6, 4, 8, 5, 9>(data);
    avx2_cas::cas2<T>::template cas<5, 8, 4, 6>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas<T, 5, 6>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<14>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas3<T>::template cas<0, 1, 3, 4, 5, 6>(data);
    avx2_cas::cas2<T>::template cas<3, 5, 4, 6>(data);
    avx2_cas::cas<T, 4, 5>(data);
    avx2_cas::cas<T, 0, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 5, 2, 6>(data);
    avx2_cas::cas2<T>::template cas<2, 5, 1, 3>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 8, 9>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas3<T>::template cas<7, 8, 10, 11, 12, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 11, 13>(data);
    avx2_cas::cas<T, 11, 12>(data);
    avx2_cas::cas<T, 7, 11>(data);
    avx2_cas::cas3<T>::template cas<7, 10, 8, 12, 9, 13>(data);
    avx2_cas::cas2<T>::template cas<9, 12, 8, 10>(data);
    avx2_cas::cas<T, 9, 11>(data);
    avx2_cas::cas3<T>::template cas<9, 10, 0, 7, 1, 8>(data);
    avx2_cas::cas<T, 2, 9>(data);
    avx2_cas::cas2<T>::template cas<2, 8, 1, 7>(data);
    avx2_cas::cas3<T>::template cas<2, 7, 3, 10, 4, 11>(data);
    avx2_cas::cas3<T>::template cas<4, 10, 5, 12, 6, 13>(data);
    avx2_cas::cas2<T>::template cas<6, 12, 5, 10>(data);
    avx2_cas::cas<T, 6, 11>(data);
    avx2_cas::cas3<T>::template cas<6, 10, 3, 7, 4, 8>(data);
    avx2_cas::cas2<T>::template cas<4, 7, 5, 9>(data);
    avx2_cas::cas2<T>::template cas<6, 9, 5, 7>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas<T, 6, 7>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<15>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas3<T>::template cas<0, 1, 3, 4, 5, 6>(data);
    avx2_cas::cas2<T>::template cas<3, 5, 4, 6>(data);
    avx2_cas::cas<T, 4, 5>(data);
    avx2_cas::cas<T, 0, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 5, 2, 6>(data);
    avx2_cas::cas2<T>::template cas<2, 5, 1, 3>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas3<T>::template cas<2, 3, 7, 8, 9, 10>(data);
    avx2_cas::cas2<T>::template cas<7, 9, 8, 10>(data);
    avx2_cas::cas3<T>::template cas<8, 9, 11, 12, 13, 14>(data);
    avx2_cas::cas2<T>::template cas<11, 13, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<12, 13, 7, 11>(data);
    avx2_cas::cas<T, 8, 12>(data);
    avx2_cas::cas3<T>::template cas<8, 11, 9, 13, 10, 14>(data);
    avx2_cas::cas2<T>::template cas<10, 13, 9, 11>(data);
    avx2_cas::cas<T, 10, 12>(data);
    avx2_cas::cas2<T>::template cas<10, 11, 0, 8>(data);
    avx2_cas::cas3<T>::template cas<0, 7, 1, 9, 2, 10>(data);
    avx2_cas::cas2<T>::template cas<2, 9, 1, 7>(data);
    avx2_cas::cas<T, 2, 8>(data);
    avx2_cas::cas3<T>::template cas<2, 7, 3, 11, 4, 12>(data);
    avx2_cas::cas3<T>::template cas<4, 11, 5, 13, 6, 14>(data);
    avx2_cas::cas2<T>::template cas<6, 13, 5, 11>(data);
    avx2_cas::cas<T, 6, 12>(data);
    avx2_cas::cas3<T>::template cas<6, 11, 3, 7, 4, 8>(data);
    avx2_cas::cas3<T>::template cas<4, 7, 5, 9, 6, 10>(data);
    avx2_cas::cas2<T>::template cas<6, 9, 5, 7>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas<T, 6, 7>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<16>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 4, 5, 6, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 0, 4>(data);
    avx2_cas::cas<T, 1, 5>(data);
    avx2_cas::cas3<T>::template cas<1, 4, 2, 6, 3, 7>(data);
    avx2_cas::cas2<T>::template cas<3, 6, 2, 4>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<3, 4, 8, 9, 10, 11>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 9, 11>(data);
    avx2_cas::cas3<T>::template cas<9, 10, 12, 13, 14, 15>(data);
    avx2_cas::cas2<T>::template cas<12, 14, 13, 15>(data);
    avx2_cas::cas2<T>::template cas<13, 14, 8, 12>(data);
    avx2_cas::cas<T, 9, 13>(data);
    avx2_cas::cas3<T>::template cas<9, 12, 10, 14, 11, 15>(data);
    avx2_cas::cas2<T>::template cas<11, 14, 10, 12>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas3<T>::template cas<11, 12, 0, 8, 1, 9>(data);
    avx2_cas::cas3<T>::template cas<1, 8, 2, 10, 3, 11>(data);
    avx2_cas::cas2<T>::template cas<3, 10, 2, 8>(data);
    avx2_cas::cas<T, 3, 9>(data);
    avx2_cas::cas3<T>::template cas<3, 8, 4, 12, 5, 13>(data);
    avx2_cas::cas3<T>::template cas<5, 12, 6, 14, 7, 15>(data);
    avx2_cas::cas2<T>::template cas<7, 14, 6, 12>(data);
    avx2_cas::cas<T, 7, 13>(data);
    avx2_cas::cas3<T>::template cas<7, 12, 4, 8, 5, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 8, 6, 10, 7, 11>(data);
    avx2_cas::cas2<T>::template cas<7, 10, 6, 8>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas<T, 7, 8>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<17>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 4, 5, 6, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 0, 4>(data);
    avx2_cas::cas<T, 1, 5>(data);
    avx2_cas::cas3<T>::template cas<1, 4, 2, 6, 3, 7>(data);
    avx2_cas::cas2<T>::template cas<3, 6, 2, 4>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<3, 4, 8, 9, 10, 11>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 9, 11>(data);
    avx2_cas::cas3<T>::template cas<9, 10, 12, 13, 15, 16>(data);
    avx2_cas::cas<T, 14, 16>(data);
    avx2_cas::cas<T, 14, 15>(data);
    avx2_cas::cas<T, 12, 15>(data);
    avx2_cas::cas2<T>::template cas<12, 14, 13, 16>(data);
    avx2_cas::cas<T, 13, 15>(data);
    avx2_cas::cas<T, 13, 14>(data);
    avx2_cas::cas<T, 8, 13>(data);
    avx2_cas::cas2<T>::template cas<8, 12, 9, 14>(data);
    avx2_cas::cas<T, 9, 13>(data);
    avx2_cas::cas3<T>::template cas<9, 12, 10, 15, 11, 16>(data);
    avx2_cas::cas2<T>::template cas<11, 15, 10, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 11, 14>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas2<T>::template cas<11, 12, 0, 9>(data);
    avx2_cas::cas2<T>::template cas<0, 8, 1, 10>(data);
    avx2_cas::cas<T, 1, 9>(data);
    avx2_cas::cas3<T>::template cas<1, 8, 2, 11, 3, 12>(data);
    avx2_cas::cas2<T>::template cas<3, 11, 2, 9>(data);
    avx2_cas::cas2<T>::template cas<2, 8, 3, 10>(data);
    avx2_cas::cas<T, 3, 9>(data);
    avx2_cas::cas3<T>::template cas<3, 8, 4, 13, 5, 14>(data);
    avx2_cas::cas3<T>::template cas<5, 13, 6, 15, 7, 16>(data);
    avx2_cas::cas2<T>::template cas<7, 15, 6, 13>(data);
    avx2_cas::cas<T, 7, 14>(data);
    avx2_cas::cas2<T>::template cas<7, 13, 4, 9>(data);
    avx2_cas::cas2<T>::template cas<4, 8, 5, 10>(data);
    avx2_cas::cas<T, 5, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 8, 6, 11, 7, 12>(data);
    avx2_cas::cas2<T>::template cas<7, 11, 6, 9>(data);
    avx2_cas::cas2<T>::template cas<6, 8, 7, 10>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas<T, 7, 8>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<18>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 4, 5, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas<T, 6, 7>(data);
    avx2_cas::cas<T, 4, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 5, 8>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas<T, 5, 6>(data);
    avx2_cas::cas<T, 0, 5>(data);
    avx2_cas::cas2<T>::template cas<0, 4, 1, 6>(data);
    avx2_cas::cas<T, 1, 5>(data);
    avx2_cas::cas3<T>::template cas<1, 4, 2, 7, 3, 8>(data);
    avx2_cas::cas2<T>::template cas<3, 7, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 3, 6>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<3, 4, 9, 10, 11, 12>(data);
    avx2_cas::cas2<T>::template cas<9, 11, 10, 12>(data);
    avx2_cas::cas3<T>::template cas<10, 11, 13, 14, 16, 17>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas<T, 15, 16>(data);
    avx2_cas::cas<T, 13, 16>(data);
    avx2_cas::cas2<T>::template cas<13, 15, 14, 17>(data);
    avx2_cas::cas<T, 14, 16>(data);
    avx2_cas::cas<T, 14, 15>(data);
    avx2_cas::cas<T, 9, 14>(data);
    avx2_cas::cas2<T>::template cas<9, 13, 10, 15>(data);
    avx2_cas::cas<T, 10, 14>(data);
    avx2_cas::cas3<T>::template cas<10, 13, 11, 16, 12, 17>(data);
    avx2_cas::cas2<T>::template cas<12, 16, 11, 14>(data);
    avx2_cas::cas2<T>::template cas<11, 13, 12, 15>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas3<T>::template cas<12, 13, 0, 9, 1, 10>(data);
    avx2_cas::cas3<T>::template cas<1, 9, 2, 11, 3, 12>(data);
    avx2_cas::cas2<T>::template cas<3, 11, 2, 9>(data);
    avx2_cas::cas<T, 3, 10>(data);
    avx2_cas::cas3<T>::template cas<3, 9, 4, 13, 5, 14>(data);
    avx2_cas::cas4<T>::template cas<5, 13, 6, 15, 7, 16, 8, 17>(data);
    avx2_cas::cas2<T>::template cas<8, 16, 7, 15>(data);
    avx2_cas::cas3<T>::template cas<8, 15, 6, 13, 7, 14>(data);
    avx2_cas::cas2<T>::template cas<8, 14, 7, 13>(data);
    avx2_cas::cas3<T>::template cas<8, 13, 4, 9, 5, 10>(data);
    avx2_cas::cas3<T>::template cas<5, 9, 6, 11, 7, 12>(data);
    avx2_cas::cas2<T>::template cas<8, 12, 7, 11>(data);
    avx2_cas::cas3<T>::template cas<8, 11, 6, 9, 7, 10>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 7, 9>(data);
    avx2_cas::cas<T, 8, 9>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<19>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 4, 5, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas<T, 6, 7>(data);
    avx2_cas::cas<T, 4, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 5, 8>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas<T, 5, 6>(data);
    avx2_cas::cas<T, 0, 5>(data);
    avx2_cas::cas2<T>::template cas<0, 4, 1, 6>(data);
    avx2_cas::cas<T, 1, 5>(data);
    avx2_cas::cas3<T>::template cas<1, 4, 2, 7, 3, 8>(data);
    avx2_cas::cas2<T>::template cas<3, 7, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 3, 6>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<3, 4, 9, 10, 12, 13>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas<T, 11, 12>(data);
    avx2_cas::cas<T, 9, 12>(data);
    avx2_cas::cas2<T>::template cas<9, 11, 10, 13>(data);
    avx2_cas::cas<T, 10, 12>(data);
    avx2_cas::cas3<T>::template cas<10, 11, 14, 15, 17, 18>(data);
    avx2_cas::cas<T, 16, 18>(data);
    avx2_cas::cas<T, 16, 17>(data);
    avx2_cas::cas<T, 14, 17>(data);
    avx2_cas::cas2<T>::template cas<14, 16, 15, 18>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas2<T>::template cas<15, 16, 9, 14>(data);
    avx2_cas::cas<T, 10, 15>(data);
    avx2_cas::cas4<T>::template cas<10, 14, 11, 16, 12, 17, 13, 18>(data);
    avx2_cas::cas2<T>::template cas<13, 17, 12, 16>(data);
    avx2_cas::cas3<T>::template cas<13, 16, 11, 14, 12, 15>(data);
    avx2_cas::cas2<T>::template cas<13, 15, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<13, 14, 0, 10>(data);
    avx2_cas::cas2<T>::template cas<0, 9, 1, 11>(data);
    avx2_cas::cas<T, 1, 10>(data);
    avx2_cas::cas3<T>::template cas<1, 9, 2, 12, 3, 13>(data);
    avx2_cas::cas2<T>::template cas<3, 12, 2, 10>(data);
    avx2_cas::cas2<T>::template cas<2, 9, 3, 11>(data);
    avx2_cas::cas<T, 3, 10>(data);
    avx2_cas::cas3<T>::template cas<3, 9, 4, 14, 5, 15>(data);
    avx2_cas::cas4<T>::template cas<5, 14, 6, 16, 7, 17, 8, 18>(data);
    avx2_cas::cas2<T>::template cas<8, 17, 7, 16>(data);
    avx2_cas::cas3<T>::template cas<8, 16, 6, 14, 7, 15>(data);
    avx2_cas::cas2<T>::template cas<8, 15, 7, 14>(data);
    avx2_cas::cas3<T>::template cas<8, 14, 4, 9, 5, 10>(data);
    avx2_cas::cas4<T>::template cas<5, 9, 6, 11, 7, 12, 8, 13>(data);
    avx2_cas::cas2<T>::template cas<8, 12, 7, 11>(data);
    avx2_cas::cas3<T>::template cas<8, 11, 6, 9, 7, 10>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 7, 9>(data);
    avx2_cas::cas<T, 8, 9>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<20>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 3, 4>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
    avx2_cas::cas<T, 0, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 4>(data);
    avx2_cas::cas<T, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 5, 6, 8, 9>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas<T, 7, 8>(data);
    avx2_cas::cas<T, 5, 8>(data);
    avx2_cas::cas2<T>::template cas<5, 7, 6, 9>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 0, 5>(data);
    avx2_cas::cas<T, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<1, 5, 2, 7, 3, 8, 4, 9>(data);
    avx2_cas::cas2<T>::template cas<4, 8, 3, 7>(data);
    avx2_cas::cas3<T>::template cas<4, 7, 2, 5, 3, 6>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<4, 5, 10, 11, 13, 14>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas<T, 12, 13>(data);
    avx2_cas::cas<T, 10, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 11, 14>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas3<T>::template cas<11, 12, 15, 16, 18, 19>(data);
    avx2_cas::cas<T, 17, 19>(data);
    avx2_cas::cas<T, 17, 18>(data);
    avx2_cas::cas<T, 15, 18>(data);
    avx2_cas::cas2<T>::template cas<15, 17, 16, 19>(data);
    avx2_cas::cas<T, 16, 18>(data);
    avx2_cas::cas2<T>::template cas<16, 17, 10, 15>(data);
    avx2_cas::cas<T, 11, 16>(data);
    avx2_cas::cas4<T>::template cas<11, 15, 12, 17, 13, 18, 14, 19>(data);
    avx2_cas::cas2<T>::template cas<14, 18, 13, 17>(data);
    avx2_cas::cas3<T>::template cas<14, 17, 12, 15, 13, 16>(data);
    avx2_cas::cas2<T>::template cas<14, 16, 13, 15>(data);
    avx2_cas::cas3<T>::template cas<14, 15, 0, 10, 1, 11>(data);
    avx2_cas::cas4<T>::template cas<1, 10, 2, 12, 3, 13, 4, 14>(data);
    avx2_cas::cas2<T>::template cas<4, 13, 3, 12>(data);
    avx2_cas::cas3<T>::template cas<4, 12, 2, 10, 3, 11>(data);
    avx2_cas::cas2<T>::template cas<4, 11, 3, 10>(data);
    avx2_cas::cas3<T>::template cas<4, 10, 5, 15, 6, 16>(data);
    avx2_cas::cas4<T>::template cas<6, 15, 7, 17, 8, 18, 9, 19>(data);
    avx2_cas::cas2<T>::template cas<9, 18, 8, 17>(data);
    avx2_cas::cas3<T>::template cas<9, 17, 7, 15, 8, 16>(data);
    avx2_cas::cas2<T>::template cas<9, 16, 8, 15>(data);
    avx2_cas::cas3<T>::template cas<9, 15, 5, 10, 6, 11>(data);
    avx2_cas::cas4<T>::template cas<6, 10, 7, 12, 8, 13, 9, 14>(data);
    avx2_cas::cas2<T>::template cas<9, 13, 8, 12>(data);
    avx2_cas::cas3<T>::template cas<9, 12, 7, 10, 8, 11>(data);
    avx2_cas::cas2<T>::template cas<9, 11, 8, 10>(data);
    avx2_cas::cas<T, 9, 10>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<21>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 3, 4>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
    avx2_cas::cas<T, 0, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 4>(data);
    avx2_cas::cas<T, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 5, 6, 8, 9>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas<T, 7, 8>(data);
    avx2_cas::cas<T, 5, 8>(data);
    avx2_cas::cas2<T>::template cas<5, 7, 6, 9>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 0, 5>(data);
    avx2_cas::cas<T, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<1, 5, 2, 7, 3, 8, 4, 9>(data);
    avx2_cas::cas2<T>::template cas<4, 8, 3, 7>(data);
    avx2_cas::cas3<T>::template cas<4, 7, 2, 5, 3, 6>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<4, 5, 10, 11, 13, 14>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas<T, 12, 13>(data);
    avx2_cas::cas<T, 10, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 11, 14>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas2<T>::template cas<11, 12, 16, 17>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas2<T>::template cas<15, 16, 19, 20>(data);
    avx2_cas::cas<T, 18, 20>(data);
    avx2_cas::cas<T, 18, 19>(data);
    avx2_cas::cas3<T>::template cas<15, 18, 16, 19, 17, 20>(data);
    avx2_cas::cas2<T>::template cas<17, 19, 16, 18>(data);
    avx2_cas::cas2<T>::template cas<17, 18, 10, 16>(data);
    avx2_cas::cas2<T>::template cas<10, 15, 11, 17>(data);
    avx2_cas::cas<T, 11, 16>(data);
    avx2_cas::cas4<T>::template cas<11, 15, 12, 18, 13, 19, 14, 20>(data);
    avx2_cas::cas2<T>::template cas<14, 19, 13, 18>(data);
    avx2_cas::cas3<T>::template cas<14, 18, 12, 15, 13, 16>(data);
    avx2_cas::cas<T, 14, 17>(data);
    avx2_cas::cas2<T>::template cas<14, 16, 13, 15>(data);
    avx2_cas::cas2<T>::template cas<14, 15, 0, 11>(data);
    avx2_cas::cas2<T>::template cas<0, 10, 1, 12>(data);
    avx2_cas::cas<T, 1, 11>(data);
    avx2_cas::cas4<T>::template cas<1, 10, 2, 13, 3, 14, 4, 15>(data);
    avx2_cas::cas2<T>::template cas<4, 14, 3, 13>(data);
    avx2_cas::cas3<T>::template cas<4, 13, 2, 10, 3, 11>(data);
    avx2_cas::cas<T, 4, 12>(data);
    avx2_cas::cas2<T>::template cas<4, 11, 3, 10>(data);
    avx2_cas::cas3<T>::template cas<4, 10, 5, 16, 6, 17>(data);
    avx2_cas::cas4<T>::template cas<6, 16, 7, 18, 8, 19, 9, 20>(data);
    avx2_cas::cas2<T>::template cas<9, 19, 8, 18>(data);
    avx2_cas::cas3<T>::template cas<9, 18, 7, 16, 8, 17>(data);
    avx2_cas::cas2<T>::template cas<9, 17, 8, 16>(data);
    avx2_cas::cas2<T>::template cas<9, 16, 5, 11>(data);
    avx2_cas::cas2<T>::template cas<5, 10, 6, 12>(data);
    avx2_cas::cas<T, 6, 11>(data);
    avx2_cas::cas4<T>::template cas<6, 10, 7, 13, 8, 14, 9, 15>(data);
    avx2_cas::cas2<T>::template cas<9, 14, 8, 13>(data);
    avx2_cas::cas3<T>::template cas<9, 13, 7, 10, 8, 11>(data);
    avx2_cas::cas<T, 9, 12>(data);
    avx2_cas::cas2<T>::template cas<9, 11, 8, 10>(data);
    avx2_cas::cas<T, 9, 10>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<22>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 3, 4>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
    avx2_cas::cas<T, 0, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 4>(data);
    avx2_cas::cas<T, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<1, 2, 6, 7>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 9, 10>(data);
    avx2_cas::cas<T, 8, 10>(data);
    avx2_cas::cas<T, 8, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 8, 6, 9, 7, 10>(data);
    avx2_cas::cas2<T>::template cas<7, 9, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<7, 8, 0, 6>(data);
    avx2_cas::cas2<T>::template cas<0, 5, 1, 7>(data);
    avx2_cas::cas<T, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<1, 5, 2, 8, 3, 9, 4, 10>(data);
    avx2_cas::cas2<T>::template cas<4, 9, 3, 8>(data);
    avx2_cas::cas3<T>::template cas<4, 8, 2, 5, 3, 6>(data);
    avx2_cas::cas<T, 4, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<4, 5, 11, 12, 14, 15>(data);
    avx2_cas::cas<T, 13, 15>(data);
    avx2_cas::cas<T, 13, 14>(data);
    avx2_cas::cas<T, 11, 14>(data);
    avx2_cas::cas2<T>::template cas<11, 13, 12, 15>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<12, 13, 17, 18>(data);
    avx2_cas::cas<T, 16, 18>(data);
    avx2_cas::cas2<T>::template cas<16, 17, 20, 21>(data);
    avx2_cas::cas<T, 19, 21>(data);
    avx2_cas::cas<T, 19, 20>(data);
    avx2_cas::cas3<T>::template cas<16, 19, 17, 20, 18, 21>(data);
    avx2_cas::cas2<T>::template cas<18, 20, 17, 19>(data);
    avx2_cas::cas2<T>::template cas<18, 19, 11, 17>(data);
    avx2_cas::cas2<T>::template cas<11, 16, 12, 18>(data);
    avx2_cas::cas<T, 12, 17>(data);
    avx2_cas::cas4<T>::template cas<12, 16, 13, 19, 14, 20, 15, 21>(data);
    avx2_cas::cas2<T>::template cas<15, 20, 14, 19>(data);
    avx2_cas::cas3<T>::template cas<15, 19, 13, 16, 14, 17>(data);
    avx2_cas::cas<T, 15, 18>(data);
    avx2_cas::cas2<T>::template cas<15, 17, 14, 16>(data);
    avx2_cas::cas3<T>::template cas<15, 16, 0, 11, 1, 12>(data);
    avx2_cas::cas4<T>::template cas<1, 11, 2, 13, 3, 14, 4, 15>(data);
    avx2_cas::cas2<T>::template cas<4, 14, 3, 13>(data);
    avx2_cas::cas3<T>::template cas<4, 13, 2, 11, 3, 12>(data);
    avx2_cas::cas2<T>::template cas<4, 12, 3, 11>(data);
    avx2_cas::cas4<T>::template cas<4, 11, 5, 16, 6, 17, 7, 18>(data);
    avx2_cas::cas2<T>::template cas<7, 17, 6, 16>(data);
    avx2_cas::cas4<T>::template cas<7, 16, 8, 19, 9, 20, 10, 21>(data);
    avx2_cas::cas2<T>::template cas<10, 20, 9, 19>(data);
    avx2_cas::cas3<T>::template cas<10, 19, 8, 16, 9, 17>(data);
    avx2_cas::cas<T, 10, 18>(data);
    avx2_cas::cas2<T>::template cas<10, 17, 9, 16>(data);
    avx2_cas::cas4<T>::template cas<10, 16, 5, 11, 6, 12, 7, 13>(data);
    avx2_cas::cas2<T>::template cas<7, 12, 6, 11>(data);
    avx2_cas::cas3<T>::template cas<7, 11, 8, 14, 9, 15>(data);
    avx2_cas::cas2<T>::template cas<10, 15, 9, 14>(data);
    avx2_cas::cas3<T>::template cas<10, 14, 8, 11, 9, 12>(data);
    avx2_cas::cas<T, 10, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 9, 11>(data);
    avx2_cas::cas<T, 10, 11>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<23>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 3, 4>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas<T, 2, 3>(data);
    avx2_cas::cas<T, 0, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 4>(data);
    avx2_cas::cas<T, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<1, 2, 6, 7>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 9, 10>(data);
    avx2_cas::cas<T, 8, 10>(data);
    avx2_cas::cas<T, 8, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 8, 6, 9, 7, 10>(data);
    avx2_cas::cas2<T>::template cas<7, 9, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<7, 8, 0, 6>(data);
    avx2_cas::cas2<T>::template cas<0, 5, 1, 7>(data);
    avx2_cas::cas<T, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<1, 5, 2, 8, 3, 9, 4, 10>(data);
    avx2_cas::cas2<T>::template cas<4, 9, 3, 8>(data);
    avx2_cas::cas3<T>::template cas<4, 8, 2, 5, 3, 6>(data);
    avx2_cas::cas<T, 4, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 3, 5>(data);
    avx2_cas::cas2<T>::template cas<4, 5, 12, 13>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas2<T>::template cas<11, 12, 15, 16>(data);
    avx2_cas::cas<T, 14, 16>(data);
    avx2_cas::cas<T, 14, 15>(data);
    avx2_cas::cas3<T>::template cas<11, 14, 12, 15, 13, 16>(data);
    avx2_cas::cas2<T>::template cas<13, 15, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<13, 14, 18, 19>(data);
    avx2_cas::cas<T, 17, 19>(data);
    avx2_cas::cas2<T>::template cas<17, 18, 21, 22>(data);
    avx2_cas::cas<T, 20, 22>(data);
    avx2_cas::cas<T, 20, 21>(data);
    avx2_cas::cas3<T>::template cas<17, 20, 18, 21, 19, 22>(data);
    avx2_cas::cas2<T>::template cas<19, 21, 18, 20>(data);
    avx2_cas::cas3<T>::template cas<19, 20, 11, 17, 12, 18>(data);
    avx2_cas::cas<T, 13, 19>(data);
    avx2_cas::cas2<T>::template cas<13, 18, 12, 17>(data);
    avx2_cas::cas4<T>::template cas<13, 17, 14, 20, 15, 21, 16, 22>(data);
    avx2_cas::cas2<T>::template cas<16, 21, 15, 20>(data);
    avx2_cas::cas3<T>::template cas<16, 20, 14, 17, 15, 18>(data);
    avx2_cas::cas<T, 16, 19>(data);
    avx2_cas::cas2<T>::template cas<16, 18, 15, 17>(data);
    avx2_cas::cas2<T>::template cas<16, 17, 0, 12>(data);
    avx2_cas::cas2<T>::template cas<0, 11, 1, 13>(data);
    avx2_cas::cas<T, 1, 12>(data);
    avx2_cas::cas4<T>::template cas<1, 11, 2, 14, 3, 15, 4, 16>(data);
    avx2_cas::cas2<T>::template cas<4, 15, 3, 14>(data);
    avx2_cas::cas3<T>::template cas<4, 14, 2, 11, 3, 12>(data);
    avx2_cas::cas<T, 4, 13>(data);
    avx2_cas::cas2<T>::template cas<4, 12, 3, 11>(data);
    avx2_cas::cas4<T>::template cas<4, 11, 5, 17, 6, 18, 7, 19>(data);
    avx2_cas::cas2<T>::template cas<7, 18, 6, 17>(data);
    avx2_cas::cas4<T>::template cas<7, 17, 8, 20, 9, 21, 10, 22>(data);
    avx2_cas::cas2<T>::template cas<10, 21, 9, 20>(data);
    avx2_cas::cas3<T>::template cas<10, 20, 8, 17, 9, 18>(data);
    avx2_cas::cas<T, 10, 19>(data);
    avx2_cas::cas2<T>::template cas<10, 18, 9, 17>(data);
    avx2_cas::cas4<T>::template cas<10, 17, 5, 11, 6, 12, 7, 13>(data);
    avx2_cas::cas2<T>::template cas<7, 12, 6, 11>(data);
    avx2_cas::cas4<T>::template cas<7, 11, 8, 14, 9, 15, 10, 16>(data);
    avx2_cas::cas2<T>::template cas<10, 15, 9, 14>(data);
    avx2_cas::cas3<T>::template cas<10, 14, 8, 11, 9, 12>(data);
    avx2_cas::cas<T, 10, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 9, 11>(data);
    avx2_cas::cas<T, 10, 11>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<24>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas2<T>::template cas<0, 1, 4, 5>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 4, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 10, 11>(data);
    avx2_cas::cas<T, 9, 11>(data);
    avx2_cas::cas<T, 9, 10>(data);
    avx2_cas::cas3<T>::template cas<6, 9, 7, 10, 8, 11>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 7, 9>(data);
    avx2_cas::cas3<T>::template cas<8, 9, 0, 6, 1, 7>(data);
    avx2_cas::cas<T, 2, 8>(data);
    avx2_cas::cas2<T>::template cas<2, 7, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<2, 6, 3, 9, 4, 10, 5, 11>(data);
    avx2_cas::cas2<T>::template cas<5, 10, 4, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 9, 3, 6, 4, 7>(data);
    avx2_cas::cas<T, 5, 8>(data);
    avx2_cas::cas2<T>::template cas<5, 7, 4, 6>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 13, 14>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<12, 13, 16, 17>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas<T, 15, 16>(data);
    avx2_cas::cas3<T>::template cas<12, 15, 13, 16, 14, 17>(data);
    avx2_cas::cas2<T>::template cas<14, 16, 13, 15>(data);
    avx2_cas::cas2<T>::template cas<14, 15, 19, 20>(data);
    avx2_cas::cas<T, 18, 20>(data);
    avx2_cas::cas2<T>::template cas<18, 19, 22, 23>(data);
    avx2_cas::cas<T, 21, 23>(data);
    avx2_cas::cas<T, 21, 22>(data);
    avx2_cas::cas3<T>::template cas<18, 21, 19, 22, 20, 23>(data);
    avx2_cas::cas2<T>::template cas<20, 22, 19, 21>(data);
    avx2_cas::cas3<T>::template cas<20, 21, 12, 18, 13, 19>(data);
    avx2_cas::cas<T, 14, 20>(data);
    avx2_cas::cas2<T>::template cas<14, 19, 13, 18>(data);
    avx2_cas::cas4<T>::template cas<14, 18, 15, 21, 16, 22, 17, 23>(data);
    avx2_cas::cas2<T>::template cas<17, 22, 16, 21>(data);
    avx2_cas::cas3<T>::template cas<17, 21, 15, 18, 16, 19>(data);
    avx2_cas::cas<T, 17, 20>(data);
    avx2_cas::cas2<T>::template cas<17, 19, 16, 18>(data);
    avx2_cas::cas4<T>::template cas<17, 18, 0, 12, 1, 13, 2, 14>(data);
    avx2_cas::cas2<T>::template cas<2, 13, 1, 12>(data);
    avx2_cas::cas4<T>::template cas<2, 12, 3, 15, 4, 16, 5, 17>(data);
    avx2_cas::cas2<T>::template cas<5, 16, 4, 15>(data);
    avx2_cas::cas3<T>::template cas<5, 15, 3, 12, 4, 13>(data);
    avx2_cas::cas<T, 5, 14>(data);
    avx2_cas::cas2<T>::template cas<5, 13, 4, 12>(data);
    avx2_cas::cas4<T>::template cas<5, 12, 6, 18, 7, 19, 8, 20>(data);
    avx2_cas::cas2<T>::template cas<8, 19, 7, 18>(data);
    avx2_cas::cas4<T>::template cas<8, 18, 9, 21, 10, 22, 11, 23>(data);
    avx2_cas::cas2<T>::template cas<11, 22, 10, 21>(data);
    avx2_cas::cas3<T>::template cas<11, 21, 9, 18, 10, 19>(data);
    avx2_cas::cas<T, 11, 20>(data);
    avx2_cas::cas2<T>::template cas<11, 19, 10, 18>(data);
    avx2_cas::cas4<T>::template cas<11, 18, 6, 12, 7, 13, 8, 14>(data);
    avx2_cas::cas2<T>::template cas<8, 13, 7, 12>(data);
    avx2_cas::cas4<T>::template cas<8, 12, 9, 15, 10, 16, 11, 17>(data);
    avx2_cas::cas2<T>::template cas<11, 16, 10, 15>(data);
    avx2_cas::cas3<T>::template cas<11, 15, 9, 12, 10, 13>(data);
    avx2_cas::cas<T, 11, 14>(data);
    avx2_cas::cas2<T>::template cas<11, 13, 10, 12>(data);
    avx2_cas::cas<T, 11, 12>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<25>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas2<T>::template cas<0, 1, 4, 5>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 4, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 10, 11>(data);
    avx2_cas::cas<T, 9, 11>(data);
    avx2_cas::cas<T, 9, 10>(data);
    avx2_cas::cas3<T>::template cas<6, 9, 7, 10, 8, 11>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 7, 9>(data);
    avx2_cas::cas3<T>::template cas<8, 9, 0, 6, 1, 7>(data);
    avx2_cas::cas<T, 2, 8>(data);
    avx2_cas::cas2<T>::template cas<2, 7, 1, 6>(data);
    avx2_cas::cas4<T>::template cas<2, 6, 3, 9, 4, 10, 5, 11>(data);
    avx2_cas::cas2<T>::template cas<5, 10, 4, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 9, 3, 6, 4, 7>(data);
    avx2_cas::cas<T, 5, 8>(data);
    avx2_cas::cas2<T>::template cas<5, 7, 4, 6>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 13, 14>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<12, 13, 16, 17>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas<T, 15, 16>(data);
    avx2_cas::cas3<T>::template cas<12, 15, 13, 16, 14, 17>(data);
    avx2_cas::cas2<T>::template cas<14, 16, 13, 15>(data);
    avx2_cas::cas2<T>::template cas<14, 15, 19, 20>(data);
    avx2_cas::cas<T, 18, 20>(data);
    avx2_cas::cas3<T>::template cas<18, 19, 21, 22, 23, 24>(data);
    avx2_cas::cas2<T>::template cas<21, 23, 22, 24>(data);
    avx2_cas::cas<T, 22, 23>(data);
    avx2_cas::cas<T, 18, 22>(data);
    avx2_cas::cas3<T>::template cas<18, 21, 19, 23, 20, 24>(data);
    avx2_cas::cas2<T>::template cas<20, 23, 19, 21>(data);
    avx2_cas::cas<T, 20, 22>(data);
    avx2_cas::cas2<T>::template cas<20, 21, 12, 19>(data);
    avx2_cas::cas3<T>::template cas<12, 18, 13, 20, 14, 21>(data);
    avx2_cas::cas2<T>::template cas<14, 20, 13, 18>(data);
    avx2_cas::cas<T, 14, 19>(data);
    avx2_cas::cas4<T>::template cas<14, 18, 15, 22, 16, 23, 17, 24>(data);
    avx2_cas::cas2<T>::template cas<17, 23, 16, 22>(data);
    avx2_cas::cas2<T>::template cas<17, 22, 15, 19>(data);
    avx2_cas::cas3<T>::template cas<15, 18, 16, 20, 17, 21>(data);
    avx2_cas::cas2<T>::template cas<17, 20, 16, 18>(data);
    avx2_cas::cas<T, 17, 19>(data);
    avx2_cas::cas2<T>::template cas<17, 18, 0, 13>(data);
    avx2_cas::cas3<T>::template cas<0, 12, 1, 14, 2, 15>(data);
    avx2_cas::cas2<T>::template cas<2, 14, 1, 12>(data);
    avx2_cas::cas<T, 2, 13>(data);
    avx2_cas::cas4<T>::template cas<2, 12, 3, 16, 4, 17, 5, 18>(data);
    avx2_cas::cas2<T>::template cas<5, 17, 4, 16>(data);
    avx2_cas::cas2<T>::template cas<5, 16, 3, 13>(data);
    avx2_cas::cas3<T>::template cas<3, 12, 4, 14, 5, 15>(data);
    avx2_cas::cas2<T>::template cas<5, 14, 4, 12>(data);
    avx2_cas::cas<T, 5, 13>(data);
    avx2_cas::cas4<T>::template cas<5, 12, 6, 19, 7, 20, 8, 21>(data);
    avx2_cas::cas2<T>::template cas<8, 20, 7, 19>(data);
    avx2_cas::cas4<T>::template cas<8, 19, 9, 22, 10, 23, 11, 24>(data);
    avx2_cas::cas2<T>::template cas<11, 23, 10, 22>(data);
    avx2_cas::cas3<T>::template cas<11, 22, 9, 19, 10, 20>(data);
    avx2_cas::cas<T, 11, 21>(data);
    avx2_cas::cas2<T>::template cas<11, 20, 10, 19>(data);
    avx2_cas::cas2<T>::template cas<11, 19, 6, 13>(data);
    avx2_cas::cas3<T>::template cas<6, 12, 7, 14, 8, 15>(data);
    avx2_cas::cas2<T>::template cas<8, 14, 7, 12>(data);
    avx2_cas::cas<T, 8, 13>(data);
    avx2_cas::cas4<T>::template cas<8, 12, 9, 16, 10, 17, 11, 18>(data);
    avx2_cas::cas2<T>::template cas<11, 17, 10, 16>(data);
    avx2_cas::cas2<T>::template cas<11, 16, 9, 13>(data);
    avx2_cas::cas3<T>::template cas<9, 12, 10, 14, 11, 15>(data);
    avx2_cas::cas2<T>::template cas<11, 14, 10, 12>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas<T, 11, 12>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<26>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas2<T>::template cas<0, 1, 4, 5>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 4, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas3<T>::template cas<6, 7, 9, 10, 11, 12>(data);
    avx2_cas::cas2<T>::template cas<9, 11, 10, 12>(data);
    avx2_cas::cas<T, 10, 11>(data);
    avx2_cas::cas<T, 6, 10>(data);
    avx2_cas::cas3<T>::template cas<6, 9, 7, 11, 8, 12>(data);
    avx2_cas::cas2<T>::template cas<8, 11, 7, 9>(data);
    avx2_cas::cas<T, 8, 10>(data);
    avx2_cas::cas2<T>::template cas<8, 9, 0, 7>(data);
    avx2_cas::cas3<T>::template cas<0, 6, 1, 8, 2, 9>(data);
    avx2_cas::cas2<T>::template cas<2, 8, 1, 6>(data);
    avx2_cas::cas<T, 2, 7>(data);
    avx2_cas::cas4<T>::template cas<2, 6, 3, 10, 4, 11, 5, 12>(data);
    avx2_cas::cas2<T>::template cas<5, 11, 4, 10>(data);
    avx2_cas::cas2<T>::template cas<5, 10, 3, 7>(data);
    avx2_cas::cas3<T>::template cas<3, 6, 4, 8, 5, 9>(data);
    avx2_cas::cas2<T>::template cas<5, 8, 4, 6>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 14, 15>(data);
    avx2_cas::cas<T, 13, 15>(data);
    avx2_cas::cas2<T>::template cas<13, 14, 17, 18>(data);
    avx2_cas::cas<T, 16, 18>(data);
    avx2_cas::cas<T, 16, 17>(data);
    avx2_cas::cas3<T>::template cas<13, 16, 14, 17, 15, 18>(data);
    avx2_cas::cas2<T>::template cas<15, 17, 14, 16>(data);
    avx2_cas::cas2<T>::template cas<15, 16, 20, 21>(data);
    avx2_cas::cas<T, 19, 21>(data);
    avx2_cas::cas3<T>::template cas<19, 20, 22, 23, 24, 25>(data);
    avx2_cas::cas2<T>::template cas<22, 24, 23, 25>(data);
    avx2_cas::cas<T, 23, 24>(data);
    avx2_cas::cas<T, 19, 23>(data);
    avx2_cas::cas3<T>::template cas<19, 22, 20, 24, 21, 25>(data);
    avx2_cas::cas2<T>::template cas<21, 24, 20, 22>(data);
    avx2_cas::cas<T, 21, 23>(data);
    avx2_cas::cas2<T>::template cas<21, 22, 13, 20>(data);
    avx2_cas::cas3<T>::template cas<13, 19, 14, 21, 15, 22>(data);
    avx2_cas::cas2<T>::template cas<15, 21, 14, 19>(data);
    avx2_cas::cas<T, 15, 20>(data);
    avx2_cas::cas4<T>::template cas<15, 19, 16, 23, 17, 24, 18, 25>(data);
    avx2_cas::cas2<T>::template cas<18, 24, 17, 23>(data);
    avx2_cas::cas2<T>::template cas<18, 23, 16, 20>(data);
    avx2_cas::cas3<T>::template cas<16, 19, 17, 21, 18, 22>(data);
    avx2_cas::cas2<T>::template cas<18, 21, 17, 19>(data);
    avx2_cas::cas<T, 18, 20>(data);
    avx2_cas::cas4<T>::template cas<18, 19, 0, 13, 1, 14, 2, 15>(data);
    avx2_cas::cas2<T>::template cas<2, 14, 1, 13>(data);
    avx2_cas::cas4<T>::template cas<2, 13, 3, 16, 4, 17, 5, 18>(data);
    avx2_cas::cas2<T>::template cas<5, 17, 4, 16>(data);
    avx2_cas::cas3<T>::template cas<5, 16, 3, 13, 4, 14>(data);
    avx2_cas::cas<T, 5, 15>(data);
    avx2_cas::cas2<T>::template cas<5, 14, 4, 13>(data);
    avx2_cas::cas4<T>::template cas<5, 13, 6, 19, 7, 20, 8, 21>(data);
    avx2_cas::cas2<T>::template cas<8, 20, 7, 19>(data);
    avx2_cas::cas3<T>::template cas<8, 19, 9, 22, 10, 23>(data);
    avx2_cas::cas3<T>::template cas<10, 22, 11, 24, 12, 25>(data);
    avx2_cas::cas2<T>::template cas<12, 24, 11, 22>(data);
    avx2_cas::cas<T, 12, 23>(data);
    avx2_cas::cas3<T>::template cas<12, 22, 9, 19, 10, 20>(data);
    avx2_cas::cas2<T>::template cas<10, 19, 11, 21>(data);
    avx2_cas::cas2<T>::template cas<12, 21, 11, 19>(data);
    avx2_cas::cas<T, 12, 20>(data);
    avx2_cas::cas4<T>::template cas<12, 19, 6, 13, 7, 14, 8, 15>(data);
    avx2_cas::cas2<T>::template cas<8, 14, 7, 13>(data);
    avx2_cas::cas3<T>::template cas<8, 13, 9, 16, 10, 17>(data);
    avx2_cas::cas2<T>::template cas<10, 16, 11, 18>(data);
    avx2_cas::cas2<T>::template cas<12, 18, 11, 16>(data);
    avx2_cas::cas<T, 12, 17>(data);
    avx2_cas::cas3<T>::template cas<12, 16, 9, 13, 10, 14>(data);
    avx2_cas::cas2<T>::template cas<10, 13, 11, 15>(data);
    avx2_cas::cas2<T>::template cas<12, 15, 11, 13>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas<T, 12, 13>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<27>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas2<T>::template cas<0, 1, 4, 5>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas<T, 3, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 4, 2, 5>(data);
    avx2_cas::cas2<T>::template cas<2, 4, 1, 3>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 7, 8>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas3<T>::template cas<6, 7, 9, 10, 11, 12>(data);
    avx2_cas::cas2<T>::template cas<9, 11, 10, 12>(data);
    avx2_cas::cas<T, 10, 11>(data);
    avx2_cas::cas<T, 6, 10>(data);
    avx2_cas::cas3<T>::template cas<6, 9, 7, 11, 8, 12>(data);
    avx2_cas::cas2<T>::template cas<8, 11, 7, 9>(data);
    avx2_cas::cas<T, 8, 10>(data);
    avx2_cas::cas2<T>::template cas<8, 9, 0, 7>(data);
    avx2_cas::cas3<T>::template cas<0, 6, 1, 8, 2, 9>(data);
    avx2_cas::cas2<T>::template cas<2, 8, 1, 6>(data);
    avx2_cas::cas<T, 2, 7>(data);
    avx2_cas::cas4<T>::template cas<2, 6, 3, 10, 4, 11, 5, 12>(data);
    avx2_cas::cas2<T>::template cas<5, 11, 4, 10>(data);
    avx2_cas::cas2<T>::template cas<5, 10, 3, 7>(data);
    avx2_cas::cas3<T>::template cas<3, 6, 4, 8, 5, 9>(data);
    avx2_cas::cas2<T>::template cas<5, 8, 4, 6>(data);
    avx2_cas::cas<T, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 14, 15>(data);
    avx2_cas::cas<T, 13, 15>(data);
    avx2_cas::cas3<T>::template cas<13, 14, 16, 17, 18, 19>(data);
    avx2_cas::cas2<T>::template cas<16, 18, 17, 19>(data);
    avx2_cas::cas<T, 17, 18>(data);
    avx2_cas::cas<T, 13, 17>(data);
    avx2_cas::cas3<T>::template cas<13, 16, 14, 18, 15, 19>(data);
    avx2_cas::cas2<T>::template cas<15, 18, 14, 16>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas2<T>::template cas<15, 16, 21, 22>(data);
    avx2_cas::cas<T, 20, 22>(data);
    avx2_cas::cas3<T>::template cas<20, 21, 23, 24, 25, 26>(data);
    avx2_cas::cas2<T>::template cas<23, 25, 24, 26>(data);
    avx2_cas::cas<T, 24, 25>(data);
    avx2_cas::cas<T, 20, 24>(data);
    avx2_cas::cas3<T>::template cas<20, 23, 21, 25, 22, 26>(data);
    avx2_cas::cas2<T>::template cas<22, 25, 21, 23>(data);
    avx2_cas::cas<T, 22, 24>(data);
    avx2_cas::cas3<T>::template cas<22, 23, 13, 20, 14, 21>(data);
    avx2_cas::cas<T, 15, 22>(data);
    avx2_cas::cas2<T>::template cas<15, 21, 14, 20>(data);
    avx2_cas::cas3<T>::template cas<15, 20, 16, 23, 17, 24>(data);
    avx2_cas::cas3<T>::template cas<17, 23, 18, 25, 19, 26>(data);
    avx2_cas::cas2<T>::template cas<19, 25, 18, 23>(data);
    avx2_cas::cas<T, 19, 24>(data);
    avx2_cas::cas3<T>::template cas<19, 23, 16, 20, 17, 21>(data);
    avx2_cas::cas2<T>::template cas<17, 20, 18, 22>(data);
    avx2_cas::cas2<T>::template cas<19, 22, 18, 20>(data);
    avx2_cas::cas<T, 19, 21>(data);
    avx2_cas::cas2<T>::template cas<19, 20, 0, 14>(data);
    avx2_cas::cas3<T>::template cas<0, 13, 1, 15, 2, 16>(data);
    avx2_cas::cas2<T>::template cas<2, 15, 1, 13>(data);
    avx2_cas::cas<T, 2, 14>(data);
    avx2_cas::cas4<T>::template cas<2, 13, 3, 17, 4, 18, 5, 19>(data);
    avx2_cas::cas2<T>::template cas<5, 18, 4, 17>(data);
    avx2_cas::cas2<T>::template cas<5, 17, 3, 14>(data);
    avx2_cas::cas3<T>::template cas<3, 13, 4, 15, 5, 16>(data);
    avx2_cas::cas2<T>::template cas<5, 15, 4, 13>(data);
    avx2_cas::cas<T, 5, 14>(data);
    avx2_cas::cas4<T>::template cas<5, 13, 6, 20, 7, 21, 8, 22>(data);
    avx2_cas::cas2<T>::template cas<8, 21, 7, 20>(data);
    avx2_cas::cas3<T>::template cas<8, 20, 9, 23, 10, 24>(data);
    avx2_cas::cas3<T>::template cas<10, 23, 11, 25, 12, 26>(data);
    avx2_cas::cas2<T>::template cas<12, 25, 11, 23>(data);
    avx2_cas::cas<T, 12, 24>(data);
    avx2_cas::cas3<T>::template cas<12, 23, 9, 20, 10, 21>(data);
    avx2_cas::cas2<T>::template cas<10, 20, 11, 22>(data);
    avx2_cas::cas2<T>::template cas<12, 22, 11, 20>(data);
    avx2_cas::cas<T, 12, 21>(data);
    avx2_cas::cas4<T>::template cas<12, 20, 6, 13, 7, 14, 8, 15>(data);
    avx2_cas::cas2<T>::template cas<8, 14, 7, 13>(data);
    avx2_cas::cas3<T>::template cas<8, 13, 9, 16, 10, 17>(data);
    avx2_cas::cas3<T>::template cas<10, 16, 11, 18, 12, 19>(data);
    avx2_cas::cas2<T>::template cas<12, 18, 11, 16>(data);
    avx2_cas::cas<T, 12, 17>(data);
    avx2_cas::cas3<T>::template cas<12, 16, 9, 13, 10, 14>(data);
    avx2_cas::cas2<T>::template cas<10, 13, 11, 15>(data);
    avx2_cas::cas2<T>::template cas<12, 15, 11, 13>(data);
    avx2_cas::cas<T, 12, 14>(data);
    avx2_cas::cas<T, 12, 13>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<28>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas3<T>::template cas<0, 1, 3, 4, 5, 6>(data);
    avx2_cas::cas2<T>::template cas<3, 5, 4, 6>(data);
    avx2_cas::cas<T, 4, 5>(data);
    avx2_cas::cas<T, 0, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 5, 2, 6>(data);
    avx2_cas::cas2<T>::template cas<2, 5, 1, 3>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 8, 9>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas3<T>::template cas<7, 8, 10, 11, 12, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 11, 13>(data);
    avx2_cas::cas<T, 11, 12>(data);
    avx2_cas::cas<T, 7, 11>(data);
    avx2_cas::cas3<T>::template cas<7, 10, 8, 12, 9, 13>(data);
    avx2_cas::cas2<T>::template cas<9, 12, 8, 10>(data);
    avx2_cas::cas<T, 9, 11>(data);
    avx2_cas::cas3<T>::template cas<9, 10, 0, 7, 1, 8>(data);
    avx2_cas::cas<T, 2, 9>(data);
    avx2_cas::cas2<T>::template cas<2, 8, 1, 7>(data);
    avx2_cas::cas3<T>::template cas<2, 7, 3, 10, 4, 11>(data);
    avx2_cas::cas3<T>::template cas<4, 10, 5, 12, 6, 13>(data);
    avx2_cas::cas2<T>::template cas<6, 12, 5, 10>(data);
    avx2_cas::cas<T, 6, 11>(data);
    avx2_cas::cas3<T>::template cas<6, 10, 3, 7, 4, 8>(data);
    avx2_cas::cas2<T>::template cas<4, 7, 5, 9>(data);
    avx2_cas::cas2<T>::template cas<6, 9, 5, 7>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 15, 16>(data);
    avx2_cas::cas<T, 14, 16>(data);
    avx2_cas::cas3<T>::template cas<14, 15, 17, 18, 19, 20>(data);
    avx2_cas::cas2<T>::template cas<17, 19, 18, 20>(data);
    avx2_cas::cas<T, 18, 19>(data);
    avx2_cas::cas<T, 14, 18>(data);
    avx2_cas::cas3<T>::template cas<14, 17, 15, 19, 16, 20>(data);
    avx2_cas::cas2<T>::template cas<16, 19, 15, 17>(data);
    avx2_cas::cas<T, 16, 18>(data);
    avx2_cas::cas2<T>::template cas<16, 17, 22, 23>(data);
    avx2_cas::cas<T, 21, 23>(data);
    avx2_cas::cas3<T>::template cas<21, 22, 24, 25, 26, 27>(data);
    avx2_cas::cas2<T>::template cas<24, 26, 25, 27>(data);
    avx2_cas::cas<T, 25, 26>(data);
    avx2_cas::cas<T, 21, 25>(data);
    avx2_cas::cas3<T>::template cas<21, 24, 22, 26, 23, 27>(data);
    avx2_cas::cas2<T>::template cas<23, 26, 22, 24>(data);
    avx2_cas::cas<T, 23, 25>(data);
    avx2_cas::cas3<T>::template cas<23, 24, 14, 21, 15, 22>(data);
    avx2_cas::cas<T, 16, 23>(data);
    avx2_cas::cas2<T>::template cas<16, 22, 15, 21>(data);
    avx2_cas::cas3<T>::template cas<16, 21, 17, 24, 18, 25>(data);
    avx2_cas::cas3<T>::template cas<18, 24, 19, 26, 20, 27>(data);
    avx2_cas::cas2<T>::template cas<20, 26, 19, 24>(data);
    avx2_cas::cas<T, 20, 25>(data);
    avx2_cas::cas3<T>::template cas<20, 24, 17, 21, 18, 22>(data);
    avx2_cas::cas2<T>::template cas<18, 21, 19, 23>(data);
    avx2_cas::cas2<T>::template cas<20, 23, 19, 21>(data);
    avx2_cas::cas<T, 20, 22>(data);
    avx2_cas::cas4<T>::template cas<20, 21, 0, 14, 1, 15, 2, 16>(data);
    avx2_cas::cas2<T>::template cas<2, 15, 1, 14>(data);
    avx2_cas::cas3<T>::template cas<2, 14, 3, 17, 4, 18>(data);
    avx2_cas::cas3<T>::template cas<4, 17, 5, 19, 6, 20>(data);
    avx2_cas::cas2<T>::template cas<6, 19, 5, 17>(data);
    avx2_cas::cas<T, 6, 18>(data);
    avx2_cas::cas3<T>::template cas<6, 17, 3, 14, 4, 15>(data);
    avx2_cas::cas2<T>::template cas<4, 14, 5, 16>(data);
    avx2_cas::cas2<T>::template cas<6, 16, 5, 14>(data);
    avx2_cas::cas<T, 6, 15>(data);
    avx2_cas::cas4<T>::template cas<6, 14, 7, 21, 8, 22, 9, 23>(data);
    avx2_cas::cas2<T>::template cas<9, 22, 8, 21>(data);
    avx2_cas::cas3<T>::template cas<9, 21, 10, 24, 11, 25>(data);
    avx2_cas::cas3<T>::template cas<11, 24, 12, 26, 13, 27>(data);
    avx2_cas::cas2<T>::template cas<13, 26, 12, 24>(data);
    avx2_cas::cas<T, 13, 25>(data);
    avx2_cas::cas3<T>::template cas<13, 24, 10, 21, 11, 22>(data);
    avx2_cas::cas2<T>::template cas<11, 21, 12, 23>(data);
    avx2_cas::cas2<T>::template cas<13, 23, 12, 21>(data);
    avx2_cas::cas<T, 13, 22>(data);
    avx2_cas::cas4<T>::template cas<13, 21, 7, 14, 8, 15, 9, 16>(data);
    avx2_cas::cas2<T>::template cas<9, 15, 8, 14>(data);
    avx2_cas::cas3<T>::template cas<9, 14, 10, 17, 11, 18>(data);
    avx2_cas::cas3<T>::template cas<11, 17, 12, 19, 13, 20>(data);
    avx2_cas::cas2<T>::template cas<13, 19, 12, 17>(data);
    avx2_cas::cas<T, 13, 18>(data);
    avx2_cas::cas3<T>::template cas<13, 17, 10, 14, 11, 15>(data);
    avx2_cas::cas2<T>::template cas<11, 14, 12, 16>(data);
    avx2_cas::cas2<T>::template cas<13, 16, 12, 14>(data);
    avx2_cas::cas<T, 13, 15>(data);
    avx2_cas::cas<T, 13, 14>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<29>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas3<T>::template cas<0, 1, 3, 4, 5, 6>(data);
    avx2_cas::cas2<T>::template cas<3, 5, 4, 6>(data);
    avx2_cas::cas<T, 4, 5>(data);
    avx2_cas::cas<T, 0, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 5, 2, 6>(data);
    avx2_cas::cas2<T>::template cas<2, 5, 1, 3>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas2<T>::template cas<2, 3, 8, 9>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas3<T>::template cas<7, 8, 10, 11, 12, 13>(data);
    avx2_cas::cas2<T>::template cas<10, 12, 11, 13>(data);
    avx2_cas::cas<T, 11, 12>(data);
    avx2_cas::cas<T, 7, 11>(data);
    avx2_cas::cas3<T>::template cas<7, 10, 8, 12, 9, 13>(data);
    avx2_cas::cas2<T>::template cas<9, 12, 8, 10>(data);
    avx2_cas::cas<T, 9, 11>(data);
    avx2_cas::cas3<T>::template cas<9, 10, 0, 7, 1, 8>(data);
    avx2_cas::cas<T, 2, 9>(data);
    avx2_cas::cas2<T>::template cas<2, 8, 1, 7>(data);
    avx2_cas::cas3<T>::template cas<2, 7, 3, 10, 4, 11>(data);
    avx2_cas::cas3<T>::template cas<4, 10, 5, 12, 6, 13>(data);
    avx2_cas::cas2<T>::template cas<6, 12, 5, 10>(data);
    avx2_cas::cas<T, 6, 11>(data);
    avx2_cas::cas3<T>::template cas<6, 10, 3, 7, 4, 8>(data);
    avx2_cas::cas2<T>::template cas<4, 7, 5, 9>(data);
    avx2_cas::cas2<T>::template cas<6, 9, 5, 7>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 15, 16>(data);
    avx2_cas::cas<T, 14, 16>(data);
    avx2_cas::cas3<T>::template cas<14, 15, 17, 18, 19, 20>(data);
    avx2_cas::cas2<T>::template cas<17, 19, 18, 20>(data);
    avx2_cas::cas<T, 18, 19>(data);
    avx2_cas::cas<T, 14, 18>(data);
    avx2_cas::cas3<T>::template cas<14, 17, 15, 19, 16, 20>(data);
    avx2_cas::cas2<T>::template cas<16, 19, 15, 17>(data);
    avx2_cas::cas<T, 16, 18>(data);
    avx2_cas::cas3<T>::template cas<16, 17, 21, 22, 23, 24>(data);
    avx2_cas::cas2<T>::template cas<21, 23, 22, 24>(data);
    avx2_cas::cas3<T>::template cas<22, 23, 25, 26, 27, 28>(data);
    avx2_cas::cas2<T>::template cas<25, 27, 26, 28>(data);
    avx2_cas::cas2<T>::template cas<26, 27, 21, 25>(data);
    avx2_cas::cas<T, 22, 26>(data);
    avx2_cas::cas3<T>::template cas<22, 25, 23, 27, 24, 28>(data);
    avx2_cas::cas2<T>::template cas<24, 27, 23, 25>(data);
    avx2_cas::cas<T, 24, 26>(data);
    avx2_cas::cas2<T>::template cas<24, 25, 14, 22>(data);
    avx2_cas::cas3<T>::template cas<14, 21, 15, 23, 16, 24>(data);
    avx2_cas::cas2<T>::template cas<16, 23, 15, 21>(data);
    avx2_cas::cas<T, 16, 22>(data);
    avx2_cas::cas3<T>::template cas<16, 21, 17, 25, 18, 26>(data);
    avx2_cas::cas3<T>::template cas<18, 25, 19, 27, 20, 28>(data);
    avx2_cas::cas2<T>::template cas<20, 27, 19, 25>(data);
    avx2_cas::cas<T, 20, 26>(data);
    avx2_cas::cas3<T>::template cas<20, 25, 17, 21, 18, 22>(data);
    avx2_cas::cas3<T>::template cas<18, 21, 19, 23, 20, 24>(data);
    avx2_cas::cas2<T>::template cas<20, 23, 19, 21>(data);
    avx2_cas::cas<T, 20, 22>(data);
    avx2_cas::cas2<T>::template cas<20, 21, 0, 15>(data);
    avx2_cas::cas3<T>::template cas<0, 14, 1, 16, 2, 17>(data);
    avx2_cas::cas2<T>::template cas<2, 16, 1, 14>(data);
    avx2_cas::cas<T, 2, 15>(data);
    avx2_cas::cas3<T>::template cas<2, 14, 3, 18, 4, 19>(data);
    avx2_cas::cas3<T>::template cas<4, 18, 5, 20, 6, 21>(data);
    avx2_cas::cas2<T>::template cas<6, 20, 5, 18>(data);
    avx2_cas::cas<T, 6, 19>(data);
    avx2_cas::cas3<T>::template cas<6, 18, 3, 14, 4, 15>(data);
    avx2_cas::cas3<T>::template cas<4, 14, 5, 16, 6, 17>(data);
    avx2_cas::cas2<T>::template cas<6, 16, 5, 14>(data);
    avx2_cas::cas<T, 6, 15>(data);
    avx2_cas::cas4<T>::template cas<6, 14, 7, 22, 8, 23, 9, 24>(data);
    avx2_cas::cas2<T>::template cas<9, 23, 8, 22>(data);
    avx2_cas::cas3<T>::template cas<9, 22, 10, 25, 11, 26>(data);
    avx2_cas::cas3<T>::template cas<11, 25, 12, 27, 13, 28>(data);
    avx2_cas::cas2<T>::template cas<13, 27, 12, 25>(data);
    avx2_cas::cas<T, 13, 26>(data);
    avx2_cas::cas3<T>::template cas<13, 25, 10, 22, 11, 23>(data);
    avx2_cas::cas2<T>::template cas<11, 22, 12, 24>(data);
    avx2_cas::cas2<T>::template cas<13, 24, 12, 22>(data);
    avx2_cas::cas<T, 13, 23>(data);
    avx2_cas::cas2<T>::template cas<13, 22, 7, 15>(data);
    avx2_cas::cas3<T>::template cas<7, 14, 8, 16, 9, 17>(data);
    avx2_cas::cas2<T>::template cas<9, 16, 8, 14>(data);
    avx2_cas::cas<T, 9, 15>(data);
    avx2_cas::cas3<T>::template cas<9, 14, 10, 18, 11, 19>(data);
    avx2_cas::cas3<T>::template cas<11, 18, 12, 20, 13, 21>(data);
    avx2_cas::cas2<T>::template cas<13, 20, 12, 18>(data);
    avx2_cas::cas<T, 13, 19>(data);
    avx2_cas::cas3<T>::template cas<13, 18, 10, 14, 11, 15>(data);
    avx2_cas::cas3<T>::template cas<11, 14, 12, 16, 13, 17>(data);
    avx2_cas::cas2<T>::template cas<13, 16, 12, 14>(data);
    avx2_cas::cas<T, 13, 15>(data);
    avx2_cas::cas<T, 13, 14>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<30>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas3<T>::template cas<0, 1, 3, 4, 5, 6>(data);
    avx2_cas::cas2<T>::template cas<3, 5, 4, 6>(data);
    avx2_cas::cas<T, 4, 5>(data);
    avx2_cas::cas<T, 0, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 5, 2, 6>(data);
    avx2_cas::cas2<T>::template cas<2, 5, 1, 3>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas3<T>::template cas<2, 3, 7, 8, 9, 10>(data);
    avx2_cas::cas2<T>::template cas<7, 9, 8, 10>(data);
    avx2_cas::cas3<T>::template cas<8, 9, 11, 12, 13, 14>(data);
    avx2_cas::cas2<T>::template cas<11, 13, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<12, 13, 7, 11>(data);
    avx2_cas::cas<T, 8, 12>(data);
    avx2_cas::cas3<T>::template cas<8, 11, 9, 13, 10, 14>(data);
    avx2_cas::cas2<T>::template cas<10, 13, 9, 11>(data);
    avx2_cas::cas<T, 10, 12>(data);
    avx2_cas::cas2<T>::template cas<10, 11, 0, 8>(data);
    avx2_cas::cas3<T>::template cas<0, 7, 1, 9, 2, 10>(data);
    avx2_cas::cas2<T>::template cas<2, 9, 1, 7>(data);
    avx2_cas::cas<T, 2, 8>(data);
    avx2_cas::cas3<T>::template cas<2, 7, 3, 11, 4, 12>(data);
    avx2_cas::cas3<T>::template cas<4, 11, 5, 13, 6, 14>(data);
    avx2_cas::cas2<T>::template cas<6, 13, 5, 11>(data);
    avx2_cas::cas<T, 6, 12>(data);
    avx2_cas::cas3<T>::template cas<6, 11, 3, 7, 4, 8>(data);
    avx2_cas::cas3<T>::template cas<4, 7, 5, 9, 6, 10>(data);
    avx2_cas::cas2<T>::template cas<6, 9, 5, 7>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas2<T>::template cas<6, 7, 16, 17>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas3<T>::template cas<15, 16, 18, 19, 20, 21>(data);
    avx2_cas::cas2<T>::template cas<18, 20, 19, 21>(data);
    avx2_cas::cas<T, 19, 20>(data);
    avx2_cas::cas<T, 15, 19>(data);
    avx2_cas::cas3<T>::template cas<15, 18, 16, 20, 17, 21>(data);
    avx2_cas::cas2<T>::template cas<17, 20, 16, 18>(data);
    avx2_cas::cas<T, 17, 19>(data);
    avx2_cas::cas3<T>::template cas<17, 18, 22, 23, 24, 25>(data);
    avx2_cas::cas2<T>::template cas<22, 24, 23, 25>(data);
    avx2_cas::cas3<T>::template cas<23, 24, 26, 27, 28, 29>(data);
    avx2_cas::cas2<T>::template cas<26, 28, 27, 29>(data);
    avx2_cas::cas2<T>::template cas<27, 28, 22, 26>(data);
    avx2_cas::cas<T, 23, 27>(data);
    avx2_cas::cas3<T>::template cas<23, 26, 24, 28, 25, 29>(data);
    avx2_cas::cas2<T>::template cas<25, 28, 24, 26>(data);
    avx2_cas::cas<T, 25, 27>(data);
    avx2_cas::cas2<T>::template cas<25, 26, 15, 23>(data);
    avx2_cas::cas3<T>::template cas<15, 22, 16, 24, 17, 25>(data);
    avx2_cas::cas2<T>::template cas<17, 24, 16, 22>(data);
    avx2_cas::cas<T, 17, 23>(data);
    avx2_cas::cas3<T>::template cas<17, 22, 18, 26, 19, 27>(data);
    avx2_cas::cas3<T>::template cas<19, 26, 20, 28, 21, 29>(data);
    avx2_cas::cas2<T>::template cas<21, 28, 20, 26>(data);
    avx2_cas::cas<T, 21, 27>(data);
    avx2_cas::cas3<T>::template cas<21, 26, 18, 22, 19, 23>(data);
    avx2_cas::cas3<T>::template cas<19, 22, 20, 24, 21, 25>(data);
    avx2_cas::cas2<T>::template cas<21, 24, 20, 22>(data);
    avx2_cas::cas<T, 21, 23>(data);
    avx2_cas::cas4<T>::template cas<21, 22, 0, 15, 1, 16, 2, 17>(data);
    avx2_cas::cas2<T>::template cas<2, 16, 1, 15>(data);
    avx2_cas::cas3<T>::template cas<2, 15, 3, 18, 4, 19>(data);
    avx2_cas::cas3<T>::template cas<4, 18, 5, 20, 6, 21>(data);
    avx2_cas::cas2<T>::template cas<6, 20, 5, 18>(data);
    avx2_cas::cas<T, 6, 19>(data);
    avx2_cas::cas3<T>::template cas<6, 18, 3, 15, 4, 16>(data);
    avx2_cas::cas2<T>::template cas<4, 15, 5, 17>(data);
    avx2_cas::cas2<T>::template cas<6, 17, 5, 15>(data);
    avx2_cas::cas<T, 6, 16>(data);
    avx2_cas::cas3<T>::template cas<6, 15, 7, 22, 8, 23>(data);
    avx2_cas::cas3<T>::template cas<8, 22, 9, 24, 10, 25>(data);
    avx2_cas::cas2<T>::template cas<10, 24, 9, 22>(data);
    avx2_cas::cas<T, 10, 23>(data);
    avx2_cas::cas3<T>::template cas<10, 22, 11, 26, 12, 27>(data);
    avx2_cas::cas3<T>::template cas<12, 26, 13, 28, 14, 29>(data);
    avx2_cas::cas2<T>::template cas<14, 28, 13, 26>(data);
    avx2_cas::cas<T, 14, 27>(data);
    avx2_cas::cas3<T>::template cas<14, 26, 11, 22, 12, 23>(data);
    avx2_cas::cas3<T>::template cas<12, 22, 13, 24, 14, 25>(data);
    avx2_cas::cas2<T>::template cas<14, 24, 13, 22>(data);
    avx2_cas::cas<T, 14, 23>(data);
    avx2_cas::cas3<T>::template cas<14, 22, 7, 15, 8, 16>(data);
    avx2_cas::cas3<T>::template cas<8, 15, 9, 17, 10, 18>(data);
    avx2_cas::cas2<T>::template cas<10, 17, 9, 15>(data);
    avx2_cas::cas<T, 10, 16>(data);
    avx2_cas::cas3<T>::template cas<10, 15, 11, 19, 12, 20>(data);
    avx2_cas::cas2<T>::template cas<12, 19, 13, 21>(data);
    avx2_cas::cas2<T>::template cas<14, 21, 13, 19>(data);
    avx2_cas::cas<T, 14, 20>(data);
    avx2_cas::cas3<T>::template cas<14, 19, 11, 15, 12, 16>(data);
    avx2_cas::cas3<T>::template cas<12, 15, 13, 17, 14, 18>(data);
    avx2_cas::cas2<T>::template cas<14, 17, 13, 15>(data);
    avx2_cas::cas<T, 14, 16>(data);
    avx2_cas::cas<T, 14, 15>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<31>::sort(T * const data)
{
    avx2_cas::cas<T, 1, 2>(data);
    avx2_cas::cas<T, 0, 2>(data);
    avx2_cas::cas3<T>::template cas<0, 1, 3, 4, 5, 6>(data);
    avx2_cas::cas2<T>::template cas<3, 5, 4, 6>(data);
    avx2_cas::cas<T, 4, 5>(data);
    avx2_cas::cas<T, 0, 4>(data);
    avx2_cas::cas3<T>::template cas<0, 3, 1, 5, 2, 6>(data);
    avx2_cas::cas2<T>::template cas<2, 5, 1, 3>(data);
    avx2_cas::cas<T, 2, 4>(data);
    avx2_cas::cas3<T>::template cas<2, 3, 7, 8, 9, 10>(data);
    avx2_cas::cas2<T>::template cas<7, 9, 8, 10>(data);
    avx2_cas::cas3<T>::template cas<8, 9, 11, 12, 13, 14>(data);
    avx2_cas::cas2<T>::template cas<11, 13, 12, 14>(data);
    avx2_cas::cas2<T>::template cas<12, 13, 7, 11>(data);
    avx2_cas::cas<T, 8, 12>(data);
    avx2_cas::cas3<T>::template cas<8, 11, 9, 13, 10, 14>(data);
    avx2_cas::cas2<T>::template cas<10, 13, 9, 11>(data);
    avx2_cas::cas<T, 10, 12>(data);
    avx2_cas::cas2<T>::template cas<10, 11, 0, 8>(data);
    avx2_cas::cas3<T>::template cas<0, 7, 1, 9, 2, 10>(data);
    avx2_cas::cas2<T>::template cas<2, 9, 1, 7>(data);
    avx2_cas::cas<T, 2, 8>(data);
    avx2_cas::cas3<T>::template cas<2, 7, 3, 11, 4, 12>(data);
    avx2_cas::cas3<T>::template cas<4, 11, 5, 13, 6, 14>(data);
    avx2_cas::cas2<T>::template cas<6, 13, 5, 11>(data);
    avx2_cas::cas<T, 6, 12>(data);
    avx2_cas::cas3<T>::template cas<6, 11, 3, 7, 4, 8>(data);
    avx2_cas::cas3<T>::template cas<4, 7, 5, 9, 6, 10>(data);
    avx2_cas::cas2<T>::template cas<6, 9, 5, 7>(data);
    avx2_cas::cas<T, 6, 8>(data);
    avx2_cas::cas3<T>::template cas<6, 7, 15, 16, 17, 18>(data);
    avx2_cas::cas2<T>::template cas<15, 17, 16, 18>(data);
    avx2_cas::cas3<T>::template cas<16, 17, 19, 20, 21, 22>(data);
    avx2_cas::cas2<T>::template cas<19, 21, 20, 22>(data);
    avx2_cas::cas2<T>::template cas<20, 21, 15, 19>(data);
    avx2_cas::cas<T, 16, 20>(data);
    avx2_cas::cas3<T>::template cas<16, 19, 17, 21, 18, 22>(data);
    avx2_cas::cas2<T>::template cas<18, 21, 17, 19>(data);
    avx2_cas::cas<T, 18, 20>(data);
    avx2_cas::cas3<T>::template cas<18, 19, 23, 24, 25, 26>(data);
    avx2_cas::cas2<T>::template cas<23, 25, 24, 26>(data);
    avx2_cas::cas3<T>::template cas<24, 25, 27, 28, 29, 30>(data);
    avx2_cas::cas2<T>::template cas<27, 29, 28, 30>(data);
    avx2_cas::cas2<T>::template cas<28, 29, 23, 27>(data);
    avx2_cas::cas<T, 24, 28>(data);
    avx2_cas::cas3<T>::template cas<24, 27, 25, 29, 26, 30>(data);
    avx2_cas::cas2<T>::template cas<26, 29, 25, 27>(data);
    avx2_cas::cas<T, 26, 28>(data);
    avx2_cas::cas3<T>::template cas<26, 27, 15, 23, 16, 24>(data);
    avx2_cas::cas3<T>::template cas<16, 23, 17, 25, 18, 26>(data);
    avx2_cas::cas2<T>::template cas<18, 25, 17, 23>(data);
    avx2_cas::cas<T, 18, 24>(data);
    avx2_cas::cas3<T>::template cas<18, 23, 19, 27, 20, 28>(data);
    avx2_cas::cas3<T>::template cas<20, 27, 21, 29, 22, 30>(data);
    avx2_cas::cas2<T>::template cas<22, 29, 21, 27>(data);
    avx2_cas::cas<T, 22, 28>(data);
    avx2_cas::cas3<T>::template cas<22, 27, 19, 23, 20, 24>(data);
    avx2_cas::cas3<T>::template cas<20, 23, 21, 25, 22, 26>(data);
    avx2_cas::cas2<T>::template cas<22, 25, 21, 23>(data);
    avx2_cas::cas<T, 22, 24>(data);
    avx2_cas::cas2<T>::template cas<22, 23, 0, 16>(data);
    avx2_cas::cas3<T>::template cas<0, 15, 1, 17, 2, 18>(data);
    avx2_cas::cas2<T>::template cas<2, 17, 1, 15>(data);
    avx2_cas::cas<T, 2, 16>(data);
    avx2_cas::cas3<T>::template cas<2, 15, 3, 19, 4, 20>(data);
    avx2_cas::cas3<T>::template cas<4, 19, 5, 21, 6, 22>(data);
    avx2_cas::cas2<T>::template cas<6, 21, 5, 19>(data);
    avx2_cas::cas<T, 6, 20>(data);
    avx2_cas::cas3<T>::template cas<6, 19, 3, 15, 4, 16>(data);
    avx2_cas::cas3<T>::template cas<4, 15, 5, 17, 6, 18>(data);
    avx2_cas::cas2<T>::template cas<6, 17, 5, 15>(data);
    avx2_cas::cas<T, 6, 16>(data);
    avx2_cas::cas3<T>::template cas<6, 15, 7, 23, 8, 24>(data);
    avx2_cas::cas3<T>::template cas<8, 23, 9, 25, 10, 26>(data);
    avx2_cas::cas2<T>::template cas<10, 25, 9, 23>(data);
    avx2_cas::cas<T, 10, 24>(data);
    avx2_cas::cas3<T>::template cas<10, 23, 11, 27, 12, 28>(data);
    avx2_cas::cas3<T>::template cas<12, 27, 13, 29, 14, 30>(data);
    avx2_cas::cas2<T>::template cas<14, 29, 13, 27>(data);
    avx2_cas::cas<T, 14, 28>(data);
    avx2_cas::cas3<T>::template cas<14, 27, 11, 23, 12, 24>(data);
    avx2_cas::cas3<T>::template cas<12, 23, 13, 25, 14, 26>(data);
    avx2_cas::cas2<T>::template cas<14, 25, 13, 23>(data);
    avx2_cas::cas<T, 14, 24>(data);
    avx2_cas::cas3<T>::template cas<14, 23, 7, 15, 8, 16>(data);
    avx2_cas::cas3<T>::template cas<8, 15, 9, 17, 10, 18>(data);
    avx2_cas::cas2<T>::template cas<10, 17, 9, 15>(data);
    avx2_cas::cas<T, 10, 16>(data);
    avx2_cas::cas3<T>::template cas<10, 15, 11, 19, 12, 20>(data);
    avx2_cas::cas3<T>::template cas<12, 19, 13, 21, 14, 22>(data);
    avx2_cas::cas2<T>::template cas<14, 21, 13, 19>(data);
    avx2_cas::cas<T, 14, 20>(data);
    avx2_cas::cas3<T>::template cas<14, 19, 11, 15, 12, 16>(data);
    avx2_cas::cas3<T>::template cas<12, 15, 13, 17, 14, 18>(data);
    avx2_cas::cas2<T>::template cas<14, 17, 13, 15>(data);
    avx2_cas::cas<T, 14, 16>(data);
    avx2_cas::cas<T, 14, 15>(data);
}

template <>
template <typename T>
inline
void
vector_sort::internal::net<32>::sort(T * const data)
{
    avx2_cas::cas2<T>::template cas<0, 1, 2, 3>(data);
    avx2_cas::cas2<T>::template cas<0, 2, 1, 3>(data);
    avx2_cas::cas3<T>::template cas<1, 2, 4, 5, 6, 7>(data);
    avx2_cas::cas2<T>::template cas<4, 6, 5, 7>(data);
    avx2_cas::cas2<T>::template cas<5, 6, 0, 4>(data);
    avx2_cas::cas<T, 1, 5>(data);
    avx2_cas::cas3<T>::template cas<1, 4, 2, 6, 3, 7>(data);
    avx2_cas::cas2<T>::template cas<3, 6, 2, 4>(data);
    avx2_cas::cas<T, 3, 5>(data);
    avx2_cas::cas3<T>::template cas<3, 4, 8, 9, 10, 11>(data);
    avx2_cas::cas2<T>::template cas<8, 10, 9, 11>(data);
    avx2_cas::cas3<T>::template cas<9, 10, 12, 13, 14, 15>(data);
    avx2_cas::cas2<T>::template cas<12, 14, 13, 15>(data);
    avx2_cas::cas2<T>::template cas<13, 14, 8, 12>(data);
    avx2_cas::cas<T, 9, 13>(data);
    avx2_cas::cas3<T>::template cas<9, 12, 10, 14, 11, 15>(data);
    avx2_cas::cas2<T>::template cas<11, 14, 10, 12>(data);
    avx2_cas::cas<T, 11, 13>(data);
    avx2_cas::cas3<T>::template cas<11, 12, 0, 8, 1, 9>(data);
    avx2_cas::cas3<T>::template cas<1, 8, 2, 10, 3, 11>(data);
    avx2_cas::cas2<T>::template cas<3, 10, 2, 8>(data);
    avx2_cas::cas<T, 3, 9>(data);
    avx2_cas::cas3<T>::template cas<3, 8, 4, 12, 5, 13>(data);
    avx2_cas::cas3<T>::template cas<5, 12, 6, 14, 7, 15>(data);
    avx2_cas::cas2<T>::template cas<7, 14, 6, 12>(data);
    avx2_cas::cas<T, 7, 13>(data);
    avx2_cas::cas3<T>::template cas<7, 12, 4, 8, 5, 9>(data);
    avx2_cas::cas3<T>::template cas<5, 8, 6, 10, 7, 11>(data);
    avx2_cas::cas2<T>::template cas<7, 10, 6, 8>(data);
    avx2_cas::cas<T, 7, 9>(data);
    avx2_cas::cas3<T>::template cas<7, 8, 16, 17, 18, 19>(data);
    avx2_cas::cas2<T>::template cas<16, 18, 17, 19>(data);
    avx2_cas::cas3<T>::template cas<17, 18, 20, 21, 22, 23>(data);
    avx2_cas::cas2<T>::template cas<20, 22, 21, 23>(data);
    avx2_cas::cas2<T>::template cas<21, 22, 16, 20>(data);
    avx2_cas::cas<T, 17, 21>(data);
    avx2_cas::cas3<T>::template cas<17, 20, 18, 22, 19, 23>(data);
    avx2_cas::cas2<T>::template cas<19, 22, 18, 20>(data);
    avx2_cas::cas<T, 19, 21>(data);
    avx2_cas::cas3<T>::template cas<19, 20, 24, 25, 26, 27>(data);
    avx2_cas::cas2<T>::template cas<24, 26, 25, 27>(data);
    avx2_cas::cas3<T>::template cas<25, 26, 28, 29, 30, 31>(data);
    avx2_cas::cas2<T>::template cas<28, 30, 29, 31>(data);
    avx2_cas::cas2<T>::template cas<29, 30, 24, 28>(data);
    avx2_cas::cas<T, 25, 29>(data);
    avx2_cas::cas3<T>::template cas<25, 28, 26, 30, 27, 31>(data);
    avx2_cas::cas2<T>::template cas<27, 30, 26, 28>(data);
    avx2_cas::cas<T, 27, 29>(data);
    avx2_cas::cas3<T>::template cas<27, 28, 16, 24, 17, 25>(data);
    avx2_cas::cas3<T>::template cas<17, 24, 18, 26, 19, 27>(data);
    avx2_cas::cas2<T>::template cas<19, 26, 18, 24>(data);
    avx2_cas::cas<T, 19, 25>(data);
    avx2_cas::cas3<T>::template cas<19, 24, 20, 28, 21, 29>(data);
    avx2_cas::cas3<T>::template cas<21, 28, 22, 30, 23, 31>(data);
    avx2_cas::cas2<T>::template cas<23, 30, 22, 28>(data);
    avx2_cas::cas<T, 23, 29>(data);
    avx2_cas::cas3<T>::template cas<23, 28, 20, 24, 21, 25>(data);
    avx2_cas::cas3<T>::template cas<21, 24, 22, 26, 23, 27>(data);
    avx2_cas::cas2<T>::template cas<23, 26, 22, 24>(data);
    avx2_cas::cas<T, 23, 25>(data);
    avx2_cas::cas3<T>::template cas<23, 24, 0, 16, 1, 17>(data);
    avx2_cas::cas3<T>::template cas<1, 16, 2, 18, 3, 19>(data);
    avx2_cas::cas2<T>::template cas<3, 18, 2, 16>(data);
    avx2_cas::cas<T, 3, 17>(data);
    avx2_cas::cas3<T>::template cas<3, 16, 4, 20, 5, 21>(data);
    avx2_cas::cas3<T>::template cas<5, 20, 6, 22, 7, 23>(data);
    avx2_cas::cas2<T>::template cas<7, 22, 6, 20>(data);
    avx2_cas::cas<T, 7, 21>(data);
    avx2_cas::cas3<T>::template cas<7, 20, 4, 16, 5, 17>(data);
    avx2_cas::cas3<T>::template cas<5, 16, 6, 18, 7, 19>(data);
    avx2_cas::cas2<T>::template cas<7, 18, 6, 16>(data);
    avx2_cas::cas<T, 7, 17>(data);
    avx2_cas::cas3<T>::template cas<7, 16, 8, 24, 9, 25>(data);
    avx2_cas::cas3<T>::template cas<9, 24, 10, 26, 11, 27>(data);
    avx2_cas::cas2<T>::template cas<11, 26, 10, 24>(data);
    avx2_cas::cas<T, 11, 25>(data);
    avx2_cas::cas3<T>::template cas<11, 24, 12, 28, 13, 29>(data);
    avx2_cas::cas3<T>::template cas<13, 28, 14, 30, 15, 31>(data);
    avx2_cas::cas2<T>::template cas<15, 30, 14, 28>(data);
    avx2_cas::cas<T, 15, 29>(data);
    avx2_cas::cas3<T>::template cas<15, 28, 12, 24, 13, 25>(data);
    avx2_cas::cas3<T>::template cas<13, 24, 14, 26, 15, 27>(data);
    avx2_cas::cas2<T>::template cas<15, 26, 14, 24>(data);
    avx2_cas::cas<T, 15, 25>(data);
    avx2_cas::cas3<T>::template cas<15, 24, 8, 16, 9, 17>(data);
    avx2_cas::cas3<T>::template cas<9, 16, 10, 18, 11, 19>(data);
    avx2_cas::cas2<T>::template cas<11, 18, 10, 16>(data);
    avx2_cas::cas<T, 11, 17>(data);
    avx2_cas::cas3<T>::template cas<11, 16, 12, 20, 13, 21>(data);
    avx2_cas::cas3<T>::template cas<13, 20, 14, 22, 15, 23>(data);
    avx2_cas::cas2<T>::template cas<15, 22, 14, 20>(data);
    avx2_cas::cas<T, 15, 21>(data);
    avx2_cas::cas3<T>::template cas<15, 20, 12, 16, 13, 17>(data);
    avx2_cas::cas3<T>::template cas<13, 16, 14, 18, 15, 19>(data);
    avx2_cas::cas2<T>::template cas<15, 18, 14, 16>(data);
    avx2_cas::cas<T, 15, 17>(data);
    avx2_cas::cas<T, 15, 16>(data);
}

template <typename T>
inline void vector_sort::internal::static_sort(T * const data, size_t const n)
{
    if (n < 2)
    {
        return;
    }
    switch (n)
    {
    case 2:
        vector_sort::internal::net<2>::sort(data);
    break;
    case 3:
        vector_sort::internal::net<3>::sort(data);
    break;
    case 4:
        vector_sort::internal::net<4>::sort(data);
    break;
    case 5:
        vector_sort::internal::net<5>::sort(data);
    break;
    case 6:
        vector_sort::internal::net<6>::sort(data);
    break;
    case 7:
        vector_sort::internal::net<7>::sort(data);
    break;
    case 8:
        vector_sort::internal::net<8>::sort(data);
    break;
    case 9:
        vector_sort::internal::net<9>::sort(data);
    break;
    case 10:
        vector_sort::internal::net<10>::sort(data);
    break;
    case 11:
        vector_sort::internal::net<11>::sort(data);
    break;
    case 12:
        vector_sort::internal::net<12>::sort(data);
    break;
    case 13:
        vector_sort::internal::net<13>::sort(data);
    break;
    case 14:
        vector_sort::internal::net<14>::sort(data);
    break;
    case 15:
        vector_sort::internal::net<15>::sort(data);
    break;
    case 16:
        vector_sort::internal::net<16>::sort(data);
    break;
    case 17:
        vector_sort::internal::net<17>::sort(data);
    break;
    case 18:
        vector_sort::internal::net<18>::sort(data);
    break;
    case 19:
        vector_sort::internal::net<19>::sort(data);
    break;
    case 20:
        vector_sort::internal::net<20>::sort(data);
    break;
    case 21:
        vector_sort::internal::net<21>::sort(data);
    break;
    case 22:
        vector_sort::internal::net<22>::sort(data);
    break;
    case 23:
        vector_sort::internal::net<23>::sort(data);
    break;
    case 24:
        vector_sort::internal::net<24>::sort(data);
    break;
    case 25:
        vector_sort::internal::net<25>::sort(data);
    break;
    case 26:
        vector_sort::internal::net<26>::sort(data);
    break;
    case 27:
        vector_sort::internal::net<27>::sort(data);
    break;
    case 28:
        vector_sort::internal::net<28>::sort(data);
    break;
    case 29:
        vector_sort::internal::net<29>::sort(data);
    break;
    case 30:
        vector_sort::internal::net<30>::sort(data);
    break;
    case 31:
        vector_sort::internal::net<31>::sort(data);
    break;
    case 32:
        vector_sort::internal::net<32>::sort(data);
    break;
    default: assert(false);
    }
}

#endif // SORTING_NETWORK_HPP
